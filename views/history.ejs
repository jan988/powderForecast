<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>History Data</title>
    <link rel="stylesheet" href="/styles/indexStyle.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.7.7/handlebars.min.js"></script>

</head>
<body>
    <%- include('partials/navbar') %>
    <h1>Historical Snowfall Data</h1>
    <p class="history-text">This page displays historical snowfall based on your selected date range.</p>

    <form id="snowfall-form" onsubmit="handleFormSubmit(event)">
        <p>Select Date Range (MM-DD):</p>
        <label for="startDate">From: </label>
        <input type="date" id="startDate" name="startDate" pattern="--MM-DD" required>

        <label for="endDate">Until: </label>
        <input type="date" id="endDate" name="endDate" pattern="--MM-DD" required>

        <button type="submit">Submit</button>
    </form>

    <div id="result">
       
    </div>

    <script>

        function getCountryFlag(country) {
            const countryFlags = {
                'Switzerland': 'ch',
                'Austria': 'at',
                'France': 'fr',
                'Italy': 'it'
            };
            return countryFlags[country] || '';
        }



        // JavaScript to handle the form submission (as before)
        async function handleFormSubmit(event) {
            event.preventDefault(); // Prevent default form submission

            // Get the selected start and end dates from the form inputs
            const form = event.target;
            const formData = new FormData(form);
            const startDate = formData.get("startDate").substring(5); // Extract 'MM-DD'
            const endDate = formData.get("endDate").substring(5);     // Extract 'MM-DD'

            console.log(startDate);
            console.log(endDate);

            try {
                // Send a POST request to the server with the selected date range
                const response = await fetch('/calculate-history-snowfall', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: `startDate=${encodeURIComponent(startDate)}&endDate=${encodeURIComponent(endDate)}`,
                });

                 // Check if the request was successful
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            // Parse the JSON response
            const data = await response.json();

            data.results.sort((a,b) => b.avg_snowfall - a.avg_snowfall);

            // Handle the response and update the DOM to show results
            const resultDiv = document.getElementById('result');
            if (data.results && data.results.length > 0) {
                let resultHTML = `<h2>Snowfall Statistics</h2><table><thead><tr><th>Location</th><th>Avg Snowfall</th><th>Total Snowfall</th></tr></thead><tbody>`;
                data.results.forEach(stat => {
                    resultHTML += `
                        <tr>
                            <td>${stat.location}</td>
                            <td>${stat.avg_snowfall.toFixed(2)}</td>
                            <td>${stat.total_snowfall.toFixed(2)}</td>
                        </tr>
                    `;
                });
                resultHTML += `</tbody></table>`;
                resultDiv.innerHTML = resultHTML;
            } else {
                resultDiv.innerHTML = `<h2>${data.message || 'No snowfall data available for the selected dates.'}</h2>`;
            }

        } catch (error) {
            console.error('Error:', error);
            document.getElementById('result').innerText = 'Error calculating snowfall';
        }
        }
    </script>

</body>
</html>
